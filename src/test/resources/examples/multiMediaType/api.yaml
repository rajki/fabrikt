openapi: "3.0.0"
info:
  title: "API Example"
  version: "1.0"
paths:
  /example-path-1:
    get:
      summary: "GET example path 1"
      parameters:
        - $ref: "#/components/parameters/ListQueryParamExploded"
        - $ref: "#/components/parameters/QueryParam2"
      responses:
        200:
          description: "successful operation"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControl"
          content:
            application/vnd.custom.media+xml:
              schema:
                $ref: "#/components/schemas/QueryResult"
            application/vnd.custom.media+json:
              schema:
                $ref: "#/components/schemas/QueryResult"
        default:
          description: >-
            error occurred - see status code and problem object for more information.
          content:
            application/problem+json:
              schema:
                $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'

  /example-path-2:
    get:
      summary: "GET example path 1"
      parameters:
        - $ref: "#/components/parameters/ListQueryParamExploded"
        - $ref: "#/components/parameters/QueryParam2"
        - $ref: "#/components/parameters/Accept"
      responses:
        200:
          description: "successful operation"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControl"
          content:
            application/vnd.custom.media+xml:
              schema:
                $ref: "#/components/schemas/QueryResult"
            application/vnd.custom.media+json:
              schema:
                $ref: "#/components/schemas/QueryResult"

  /multiple-response-schemas:
    get:
      summary: "GET with multiple response content schemas"
      parameters:
        - $ref: "#/components/parameters/Accept"
      responses:
        200:
          description: "successful operation"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControl"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
            application/vnd.custom.media+json:
              schema:
                $ref: '#/components/schemas/OtherQueryResult'
  /different-success-and-error-response-schema:
    get:
      responses:
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

components:
  parameters:
    ListQueryParamExploded:
      name: "explode_list_query_param"
      in: "query"
      schema:
        type: "array"
        items:
          type: "string"
      required: false
      allowEmptyValue: false

    QueryParam2:
      name: "query_param2"
      in: "query"
      schema:
        type: integer
      required: false

    Accept:
      name: Accept
      in: header
      required: false
      description: the content type accepted by the client
      schema:
        $ref: '#/components/schemas/ContentType'

  headers:
    CacheControl:
      description: "The RFC7234 Cache Control header"
      schema:
        type: "string"
      example: "must-revalidate, max-age=5"

  schemas:
    ContentType:
      type: string
      x-extensible-enum:
        - application/json
        - application/vnd.custom.media+json

    QueryResult:
      type: "object"
      required:
        - "items"
      properties:
        items:
          type: "array"
          minItems: 0
          items:
            oneOf:
              - $ref: "#/components/schemas/FirstModel"
              - $ref: "#/components/schemas/SecondModel"
              - $ref: "#/components/schemas/ThirdModel"
    OtherQueryResult:
      type: "object"
      required:
        - "items"
      properties:
        items:
          type: "array"
          minItems: 0
          items:
            $ref: "#/components/schemas/AlternateResponseModel"
    Content:
      type: "object"
      required:
        - "id"
        - "attr_1"
        - "attr_2"
        - "attr_3"
        - "etag"
        - "model_type"
      properties:
        id:
          description: "The unique resource id"
          type: "string"
          readOnly: true
        first_attr:
          description: "The attribute 1"
          type: "string"
          format: "date-time"
          example: "2016-01-27T10:52:46.406Z"
          readOnly: true
        second_attr:
          description: "The attribute 2"
          type: "string"
          readOnly: true
        third_attr:
          type: "string"
          enum:
            - "enum_type_1"
            - "enum_type_2"
          description: "Enum types for attribute 3"
          example: "enum_type_2"
        etag:
          type: "string"
          description: "Etag value to be used in conjunction with If-Match headers for optimistic locking purposes"
          readOnly: true
        model_type:
          type: "string"
          description: "The model discrimination type"
          enum:
            - "first_model"
            - "second_model"
            - "third_model"
          example: "third_model"
      discriminator:
        propertyName: "model_type"
        mapping:
          first_model: "#/components/schemas/FirstModel"
          second_model: "#/components/schemas/SecondModel"
          third_model: "#/components/schemas/ThirdModel"

    FirstModel:
      allOf:
        - $ref: "#/components/schemas/Content"
        - type: "object"
          properties:
            extra_first_attr:
              description: "The attribute 1 for model 1"
              type: array
              items:
                type: "string"
                minItems: 1
                maxItems: 10
              readOnly: true
    SecondModel:
      allOf:
        - $ref: "#/components/schemas/Content"
        - type: "object"
          properties:
            extra_first_attr:
              description: "The attribute 1 for model 2"
              type: "string"
              readOnly: true
            extra_second_attr:
              description: "The attribute 2 for model 2"
              type: boolean
              readOnly: true

    ThirdModel:
      allOf:
        - $ref: "#/components/schemas/Content"
        - type: "object"
          properties:
            extra_first_attr:
              description: "The attribute 1 for model 3"
              type: "string"
              format: "date-time"
              example: "2016-01-27T10:52:46.406Z"
              readOnly: true
            extra_second_attr:
              description: "The attribute 2 for model 3"
              type: integer
              readOnly: true

    AlternateResponseModel:
      type: "object"
      properties:
        extra_first_attr:
          description: "The attribute 1 for model 3"
          type: "string"
          format: "date-time"
          example: "2016-01-27T10:52:46.406Z"
          readOnly: true
        extra_second_attr:
          description: "The attribute 2 for model 3"
          type: integer
          readOnly: true
    SuccessResponse:
      type: object
      properties:
        successMessage:
          type: string
    ErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string